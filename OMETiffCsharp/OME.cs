using System.Xml.Serialization;
// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 

namespace OMETiffCsharp.OMETiff
{
    /// <remarks>
    /// Generated code to serialize image metadata into Open Microscopy's OME-XML format.
    /// </remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class OME
    {

        private Rights rightsField;

        private object[] itemsField;

        private string uUIDField;

        private string creatorField;

        /// <remarks/>
        public Rights Rights
        {
            get
            {
                return this.rightsField;
            }
            set
            {
                this.rightsField = value;
            }
        }

        [System.Xml.Serialization.XmlAnyElement("Comment")]
        public System.Xml.XmlComment OMEComment 
        {
            get 
            { 
                return new System.Xml.XmlDocument().CreateComment("Warning: this comment is an" +
                    " OME-XML metadata block, which contains crucial dimensional parameters and other" +
                    " important metadata. Please edit cautiously (if at all), and back up the original " + 
                    "data before doing so. For more information, see the OME-TIFF web site: " + 
                    "https://docs.openmicroscopy.org/latest/ome-model/ome-tiff/. ");
            } 
            set { }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BinaryOnly", typeof(OMEBinaryOnly))]
        [System.Xml.Serialization.XmlElementAttribute("Dataset", typeof(Dataset))]
        [System.Xml.Serialization.XmlElementAttribute("Experiment", typeof(Experiment))]
        [System.Xml.Serialization.XmlElementAttribute("Experimenter", typeof(Experimenter))]
        [System.Xml.Serialization.XmlElementAttribute("ExperimenterGroup", typeof(ExperimenterGroup))]
        [System.Xml.Serialization.XmlElementAttribute("Folder", typeof(Folder))]
        [System.Xml.Serialization.XmlElementAttribute("Image", typeof(Image))]
        [System.Xml.Serialization.XmlElementAttribute("Instrument", typeof(Instrument))]
        [System.Xml.Serialization.XmlElementAttribute("Plate", typeof(Plate))]
        [System.Xml.Serialization.XmlElementAttribute("Project", typeof(Project))]
        [System.Xml.Serialization.XmlElementAttribute("ROI", typeof(ROI))]
        [System.Xml.Serialization.XmlElementAttribute("Screen", typeof(Screen))]
        [System.Xml.Serialization.XmlElementAttribute("StructuredAnnotations", typeof(StructuredAnnotations))]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "anyURI")]
        public string UUID
        {
            get
            {
                return this.uUIDField;
            }
            set
            {
                this.uUIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Creator
        {
            get
            {
                return this.creatorField;
            }
            set
            {
                this.creatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Rights
    {

        private string rightsHolderField;

        private string rightsHeldField;

        /// <remarks/>
        public string RightsHolder
        {
            get
            {
                return this.rightsHolderField;
            }
            set
            {
                this.rightsHolderField = value;
            }
        }

        /// <remarks/>
        public string RightsHeld
        {
            get
            {
                return this.rightsHeldField;
            }
            set
            {
                this.rightsHeldField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class AffineTransform
    {

        private float a00Field;

        private float a10Field;

        private float a01Field;

        private float a11Field;

        private float a02Field;

        private float a12Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A00
        {
            get
            {
                return this.a00Field;
            }
            set
            {
                this.a00Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A10
        {
            get
            {
                return this.a10Field;
            }
            set
            {
                this.a10Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A01
        {
            get
            {
                return this.a01Field;
            }
            set
            {
                this.a01Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A11
        {
            get
            {
                return this.a11Field;
            }
            set
            {
                this.a11Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A02
        {
            get
            {
                return this.a02Field;
            }
            set
            {
                this.a02Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float A12
        {
            get
            {
                return this.a12Field;
            }
            set
            {
                this.a12Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class Shape
    {

        private AffineTransform transformField;

        private AnnotationRef[] annotationRefField;

        private int fillColorField;

        private bool fillColorFieldSpecified;

        private ShapeFillRule fillRuleField;

        private bool fillRuleFieldSpecified;

        private int strokeColorField;

        private bool strokeColorFieldSpecified;

        private float strokeWidthField;

        private bool strokeWidthFieldSpecified;

        private UnitsLength strokeWidthUnitField;

        private string strokeDashArrayField;

        private string textField;

        private ShapeFontFamily fontFamilyField;

        private bool fontFamilyFieldSpecified;

        private int fontSizeField;

        private bool fontSizeFieldSpecified;

        private UnitsLength fontSizeUnitField;

        private ShapeFontStyle fontStyleField;

        private bool fontStyleFieldSpecified;

        private bool lockedField;

        private bool lockedFieldSpecified;

        private string idField;

        private int theZField;

        private bool theZFieldSpecified;

        private int theTField;

        private bool theTFieldSpecified;

        private int theCField;

        private bool theCFieldSpecified;

        public Shape()
        {
            this.strokeWidthUnitField = UnitsLength.pixel;
            this.fontSizeUnitField = UnitsLength.pt;
        }

        /// <remarks/>
        public AffineTransform Transform
        {
            get
            {
                return this.transformField;
            }
            set
            {
                this.transformField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int FillColor
        {
            get
            {
                return this.fillColorField;
            }
            set
            {
                this.fillColorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FillColorSpecified
        {
            get
            {
                return this.fillColorFieldSpecified;
            }
            set
            {
                this.fillColorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ShapeFillRule FillRule
        {
            get
            {
                return this.fillRuleField;
            }
            set
            {
                this.fillRuleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FillRuleSpecified
        {
            get
            {
                return this.fillRuleFieldSpecified;
            }
            set
            {
                this.fillRuleFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int StrokeColor
        {
            get
            {
                return this.strokeColorField;
            }
            set
            {
                this.strokeColorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StrokeColorSpecified
        {
            get
            {
                return this.strokeColorFieldSpecified;
            }
            set
            {
                this.strokeColorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float StrokeWidth
        {
            get
            {
                return this.strokeWidthField;
            }
            set
            {
                this.strokeWidthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StrokeWidthSpecified
        {
            get
            {
                return this.strokeWidthFieldSpecified;
            }
            set
            {
                this.strokeWidthFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.pixel)]
        public UnitsLength StrokeWidthUnit
        {
            get
            {
                return this.strokeWidthUnitField;
            }
            set
            {
                this.strokeWidthUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StrokeDashArray
        {
            get
            {
                return this.strokeDashArrayField;
            }
            set
            {
                this.strokeDashArrayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ShapeFontFamily FontFamily
        {
            get
            {
                return this.fontFamilyField;
            }
            set
            {
                this.fontFamilyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontFamilySpecified
        {
            get
            {
                return this.fontFamilyFieldSpecified;
            }
            set
            {
                this.fontFamilyFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int FontSize
        {
            get
            {
                return this.fontSizeField;
            }
            set
            {
                this.fontSizeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified
        {
            get
            {
                return this.fontSizeFieldSpecified;
            }
            set
            {
                this.fontSizeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.pt)]
        public UnitsLength FontSizeUnit
        {
            get
            {
                return this.fontSizeUnitField;
            }
            set
            {
                this.fontSizeUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ShapeFontStyle FontStyle
        {
            get
            {
                return this.fontStyleField;
            }
            set
            {
                this.fontStyleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified
        {
            get
            {
                return this.fontStyleFieldSpecified;
            }
            set
            {
                this.fontStyleFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Locked
        {
            get
            {
                return this.lockedField;
            }
            set
            {
                this.lockedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedFieldSpecified;
            }
            set
            {
                this.lockedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheZ
        {
            get
            {
                return this.theZField;
            }
            set
            {
                this.theZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TheZSpecified
        {
            get
            {
                return this.theZFieldSpecified;
            }
            set
            {
                this.theZFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheT
        {
            get
            {
                return this.theTField;
            }
            set
            {
                this.theTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TheTSpecified
        {
            get
            {
                return this.theTFieldSpecified;
            }
            set
            {
                this.theTFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheC
        {
            get
            {
                return this.theCField;
            }
            set
            {
                this.theCField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TheCSpecified
        {
            get
            {
                return this.theCFieldSpecified;
            }
            set
            {
                this.theCFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class AnnotationRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Settings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FilterRef))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class Reference
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class Settings : Reference
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class FilterRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ShapeFillRule
    {

        /// <remarks/>
        EvenOdd,

        /// <remarks/>
        NonZero,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsLength
    {

        /// <remarks/>
        Ym,

        /// <remarks/>
        Zm,

        /// <remarks/>
        Em,

        /// <remarks/>
        Pm,

        /// <remarks/>
        Tm,

        /// <remarks/>
        Gm,

        /// <remarks/>
        Mm,

        /// <remarks/>
        km,

        /// <remarks/>
        hm,

        /// <remarks/>
        dam,

        /// <remarks/>
        m,

        /// <remarks/>
        dm,

        /// <remarks/>
        cm,

        /// <remarks/>
        mm,

        /// <remarks/>
        µm,

        /// <remarks/>
        nm,

        /// <remarks/>
        pm,

        /// <remarks/>
        fm,

        /// <remarks/>
        am,

        /// <remarks/>
        zm,

        /// <remarks/>
        ym,

        /// <remarks/>
        Å,

        /// <remarks/>
        thou,

        /// <remarks/>
        li,

        /// <remarks/>
        @in,

        /// <remarks/>
        ft,

        /// <remarks/>
        yd,

        /// <remarks/>
        mi,

        /// <remarks/>
        ua,

        /// <remarks/>
        ly,

        /// <remarks/>
        pc,

        /// <remarks/>
        pt,

        /// <remarks/>
        pixel,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reference frame")]
        referenceframe,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ShapeFontFamily
    {

        /// <remarks/>
        serif,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sans-serif")]
        sansserif,

        /// <remarks/>
        cursive,

        /// <remarks/>
        fantasy,

        /// <remarks/>
        monospace,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ShapeFontStyle
    {

        /// <remarks/>
        Bold,

        /// <remarks/>
        BoldItalic,

        /// <remarks/>
        Italic,

        /// <remarks/>
        Normal,
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TypeAnnotation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextAnnotation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BasicAnnotation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NumericAnnotation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class Annotation
    {

        private string descriptionField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string namespaceField;

        private string annotatorField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "anyURI")]
        public string Namespace
        {
            get
            {
                return this.namespaceField;
            }
            set
            {
                this.namespaceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Annotator
        {
            get
            {
                return this.annotatorField;
            }
            set
            {
                this.annotatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class TypeAnnotation : Annotation
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class TextAnnotation : Annotation
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NumericAnnotation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class BasicAnnotation : Annotation
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class NumericAnnotation : BasicAnnotation
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LightSource))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class ManufacturerSpec
    {

        private string manufacturerField;

        private string modelField;

        private string serialNumberField;

        private string lotNumberField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Manufacturer
        {
            get
            {
                return this.manufacturerField;
            }
            set
            {
                this.manufacturerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Model
        {
            get
            {
                return this.modelField;
            }
            set
            {
                this.modelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SerialNumber
        {
            get
            {
                return this.serialNumberField;
            }
            set
            {
                this.serialNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LotNumber
        {
            get
            {
                return this.lotNumberField;
            }
            set
            {
                this.lotNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class LightSource : ManufacturerSpec
    {

        private AnnotationRef[] annotationRefField;

        private string idField;

        private float powerField;

        private bool powerFieldSpecified;

        private UnitsPower powerUnitField;

        public LightSource()
        {
            this.powerUnitField = UnitsPower.mW;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Power
        {
            get
            {
                return this.powerField;
            }
            set
            {
                this.powerField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PowerSpecified
        {
            get
            {
                return this.powerFieldSpecified;
            }
            set
            {
                this.powerFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsPower.mW)]
        public UnitsPower PowerUnit
        {
            get
            {
                return this.powerUnitField;
            }
            set
            {
                this.powerUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsPower
    {

        /// <remarks/>
        YW,

        /// <remarks/>
        ZW,

        /// <remarks/>
        EW,

        /// <remarks/>
        PW,

        /// <remarks/>
        TW,

        /// <remarks/>
        GW,

        /// <remarks/>
        MW,

        /// <remarks/>
        kW,

        /// <remarks/>
        hW,

        /// <remarks/>
        daW,

        /// <remarks/>
        W,

        /// <remarks/>
        dW,

        /// <remarks/>
        cW,

        /// <remarks/>
        mW,

        /// <remarks/>
        µW,

        /// <remarks/>
        nW,

        /// <remarks/>
        pW,

        /// <remarks/>
        fW,

        /// <remarks/>
        aW,

        /// <remarks/>
        zW,

        /// <remarks/>
        yW,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class OMEBinaryOnly
    {

        private string metadataFileField;

        private string uUIDField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MetadataFile
        {
            get
            {
                return this.metadataFileField;
            }
            set
            {
                this.metadataFileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "anyURI")]
        public string UUID
        {
            get
            {
                return this.uUIDField;
            }
            set
            {
                this.uUIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Dataset
    {

        private string descriptionField;

        private ExperimenterRef experimenterRefField;

        private ExperimenterGroupRef experimenterGroupRefField;

        private ImageRef[] imageRefField;

        private AnnotationRef[] annotationRefField;

        private string nameField;

        private string idField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public ExperimenterRef ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        public ExperimenterGroupRef ExperimenterGroupRef
        {
            get
            {
                return this.experimenterGroupRefField;
            }
            set
            {
                this.experimenterGroupRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ImageRef")]
        public ImageRef[] ImageRef
        {
            get
            {
                return this.imageRefField;
            }
            set
            {
                this.imageRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ExperimenterRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ExperimenterGroupRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ImageRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Experiment
    {

        private string descriptionField;

        private ExperimenterRef experimenterRefField;

        private MicrobeamManipulation[] microbeamManipulationField;

        private ExperimentType typeField;

        private bool typeFieldSpecified;

        private string idField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public ExperimenterRef ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MicrobeamManipulation")]
        public MicrobeamManipulation[] MicrobeamManipulation
        {
            get
            {
                return this.microbeamManipulationField;
            }
            set
            {
                this.microbeamManipulationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ExperimentType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class MicrobeamManipulation
    {

        private string descriptionField;

        private ROIRef[] rOIRefField;

        private ExperimenterRef experimenterRefField;

        private LightSourceSettings[] lightSourceSettingsField;

        private string idField;

        private MicrobeamManipulationType typeField;

        private bool typeFieldSpecified;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ROIRef")]
        public ROIRef[] ROIRef
        {
            get
            {
                return this.rOIRefField;
            }
            set
            {
                this.rOIRefField = value;
            }
        }

        /// <remarks/>
        public ExperimenterRef ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LightSourceSettings")]
        public LightSourceSettings[] LightSourceSettings
        {
            get
            {
                return this.lightSourceSettingsField;
            }
            set
            {
                this.lightSourceSettingsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MicrobeamManipulationType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class LightSourceSettings : Settings
    {

        private string idField;

        private float attenuationField;

        private bool attenuationFieldSpecified;

        private float wavelengthField;

        private bool wavelengthFieldSpecified;

        private UnitsLength wavelengthUnitField;

        public LightSourceSettings()
        {
            this.wavelengthUnitField = UnitsLength.nm;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Attenuation
        {
            get
            {
                return this.attenuationField;
            }
            set
            {
                this.attenuationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttenuationSpecified
        {
            get
            {
                return this.attenuationFieldSpecified;
            }
            set
            {
                this.attenuationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Wavelength
        {
            get
            {
                return this.wavelengthField;
            }
            set
            {
                this.wavelengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WavelengthSpecified
        {
            get
            {
                return this.wavelengthFieldSpecified;
            }
            set
            {
                this.wavelengthFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength WavelengthUnit
        {
            get
            {
                return this.wavelengthUnitField;
            }
            set
            {
                this.wavelengthUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum MicrobeamManipulationType
    {

        /// <remarks/>
        FRAP = 1,

        /// <remarks/>
        FLIP = 2,

        /// <remarks/>
        InverseFRAP = 4,

        /// <remarks/>
        Photoablation = 8,

        /// <remarks/>
        Photoactivation = 16,

        /// <remarks/>
        Uncaging = 32,

        /// <remarks/>
        OpticalTrapping = 64,

        /// <remarks/>
        Other = 128,
    }

    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ExperimentType
    {

        /// <remarks/>
        FP = 1,

        /// <remarks/>
        FRET = 2,

        /// <remarks/>
        TimeLapse = 4,

        /// <remarks/>
        FourDPlus = 8,

        /// <remarks/>
        Screen = 16,

        /// <remarks/>
        Immunocytochemistry = 32,

        /// <remarks/>
        Immunofluorescence = 64,

        /// <remarks/>
        FISH = 128,

        /// <remarks/>
        Electrophysiology = 256,

        /// <remarks/>
        IonImaging = 512,

        /// <remarks/>
        Colocalization = 1024,

        /// <remarks/>
        PGIDocumentation = 2048,

        /// <remarks/>
        FluorescenceLifetime = 4096,

        /// <remarks/>
        SpectralImaging = 8192,

        /// <remarks/>
        Photobleaching = 16384,

        /// <remarks/>
        SPIM = 32768,

        /// <remarks/>
        Other = 65536,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Experimenter
    {

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string firstNameField;

        private string middleNameField;

        private string lastNameField;

        private string emailField;

        private string institutionField;

        private string userNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FirstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                this.firstNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MiddleName
        {
            get
            {
                return this.middleNameField;
            }
            set
            {
                this.middleNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                this.lastNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Institution
        {
            get
            {
                return this.institutionField;
            }
            set
            {
                this.institutionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ExperimenterGroup
    {

        private string descriptionField;

        private ExperimenterRef[] experimenterRefField;

        private Leader[] leaderField;

        private AnnotationRef[] annotationRefField;

        private string nameField;

        private string idField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExperimenterRef")]
        public ExperimenterRef[] ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Leader")]
        public Leader[] Leader
        {
            get
            {
                return this.leaderField;
            }
            set
            {
                this.leaderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Leader : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Folder
    {

        private string descriptionField;

        private FolderRef[] folderRefField;

        private ImageRef[] imageRefField;

        private ROIRef[] rOIRefField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FolderRef")]
        public FolderRef[] FolderRef
        {
            get
            {
                return this.folderRefField;
            }
            set
            {
                this.folderRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ImageRef")]
        public ImageRef[] ImageRef
        {
            get
            {
                return this.imageRefField;
            }
            set
            {
                this.imageRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ROIRef")]
        public ROIRef[] ROIRef
        {
            get
            {
                return this.rOIRefField;
            }
            set
            {
                this.rOIRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class FolderRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Image
    {

        private System.DateTime acquisitionDateField;

        private bool acquisitionDateFieldSpecified;

        private ExperimenterRef experimenterRefField;

        private string descriptionField;

        private ExperimentRef experimentRefField;

        private ExperimenterGroupRef experimenterGroupRefField;

        private InstrumentRef instrumentRefField;

        private ObjectiveSettings objectiveSettingsField;

        private ImagingEnvironment imagingEnvironmentField;

        private StageLabel stageLabelField;

        private Pixels pixelsField;

        private ROIRef[] rOIRefField;

        private MicrobeamManipulationRef[] microbeamManipulationRefField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string nameField;

        /// <remarks/>
        public System.DateTime AcquisitionDate
        {
            get
            {
                return this.acquisitionDateField;
            }
            set
            {
                this.acquisitionDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcquisitionDateSpecified
        {
            get
            {
                return this.acquisitionDateFieldSpecified;
            }
            set
            {
                this.acquisitionDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        public ExperimenterRef ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public ExperimentRef ExperimentRef
        {
            get
            {
                return this.experimentRefField;
            }
            set
            {
                this.experimentRefField = value;
            }
        }

        /// <remarks/>
        public ExperimenterGroupRef ExperimenterGroupRef
        {
            get
            {
                return this.experimenterGroupRefField;
            }
            set
            {
                this.experimenterGroupRefField = value;
            }
        }

        /// <remarks/>
        public InstrumentRef InstrumentRef
        {
            get
            {
                return this.instrumentRefField;
            }
            set
            {
                this.instrumentRefField = value;
            }
        }

        /// <remarks/>
        public ObjectiveSettings ObjectiveSettings
        {
            get
            {
                return this.objectiveSettingsField;
            }
            set
            {
                this.objectiveSettingsField = value;
            }
        }

        /// <remarks/>
        public ImagingEnvironment ImagingEnvironment
        {
            get
            {
                return this.imagingEnvironmentField;
            }
            set
            {
                this.imagingEnvironmentField = value;
            }
        }

        /// <remarks/>
        public StageLabel StageLabel
        {
            get
            {
                return this.stageLabelField;
            }
            set
            {
                this.stageLabelField = value;
            }
        }

        /// <remarks/>
        public Pixels Pixels
        {
            get
            {
                return this.pixelsField;
            }
            set
            {
                this.pixelsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ROIRef")]
        public ROIRef[] ROIRef
        {
            get
            {
                return this.rOIRefField;
            }
            set
            {
                this.rOIRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MicrobeamManipulationRef")]
        public MicrobeamManipulationRef[] MicrobeamManipulationRef
        {
            get
            {
                return this.microbeamManipulationRefField;
            }
            set
            {
                this.microbeamManipulationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ExperimentRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ObjectiveSettings : Settings
    {

        private string idField;

        private float correctionCollarField;

        private bool correctionCollarFieldSpecified;

        private ObjectiveSettingsMedium mediumField;

        private bool mediumFieldSpecified;

        private float refractiveIndexField;

        private bool refractiveIndexFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CorrectionCollar
        {
            get
            {
                return this.correctionCollarField;
            }
            set
            {
                this.correctionCollarField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CorrectionCollarSpecified
        {
            get
            {
                return this.correctionCollarFieldSpecified;
            }
            set
            {
                this.correctionCollarFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ObjectiveSettingsMedium Medium
        {
            get
            {
                return this.mediumField;
            }
            set
            {
                this.mediumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MediumSpecified
        {
            get
            {
                return this.mediumFieldSpecified;
            }
            set
            {
                this.mediumFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float RefractiveIndex
        {
            get
            {
                return this.refractiveIndexField;
            }
            set
            {
                this.refractiveIndexField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefractiveIndexSpecified
        {
            get
            {
                return this.refractiveIndexFieldSpecified;
            }
            set
            {
                this.refractiveIndexFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ObjectiveSettingsMedium
    {

        /// <remarks/>
        Air,

        /// <remarks/>
        Oil,

        /// <remarks/>
        Water,

        /// <remarks/>
        Glycerol,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ImagingEnvironment
    {

        private MapM[] mapField;

        private float temperatureField;

        private bool temperatureFieldSpecified;

        private UnitsTemperature temperatureUnitField;

        private float airPressureField;

        private bool airPressureFieldSpecified;

        private UnitsPressure airPressureUnitField;

        private float humidityField;

        private bool humidityFieldSpecified;

        private float cO2PercentField;

        private bool cO2PercentFieldSpecified;

        public ImagingEnvironment()
        {
            this.temperatureUnitField = UnitsTemperature.C;
            this.airPressureUnitField = UnitsPressure.mbar;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("M", IsNullable = false)]
        public MapM[] Map
        {
            get
            {
                return this.mapField;
            }
            set
            {
                this.mapField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Temperature
        {
            get
            {
                return this.temperatureField;
            }
            set
            {
                this.temperatureField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemperatureSpecified
        {
            get
            {
                return this.temperatureFieldSpecified;
            }
            set
            {
                this.temperatureFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsTemperature.C)]
        public UnitsTemperature TemperatureUnit
        {
            get
            {
                return this.temperatureUnitField;
            }
            set
            {
                this.temperatureUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float AirPressure
        {
            get
            {
                return this.airPressureField;
            }
            set
            {
                this.airPressureField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AirPressureSpecified
        {
            get
            {
                return this.airPressureFieldSpecified;
            }
            set
            {
                this.airPressureFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsPressure.mbar)]
        public UnitsPressure AirPressureUnit
        {
            get
            {
                return this.airPressureUnitField;
            }
            set
            {
                this.airPressureUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Humidity
        {
            get
            {
                return this.humidityField;
            }
            set
            {
                this.humidityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HumiditySpecified
        {
            get
            {
                return this.humidityFieldSpecified;
            }
            set
            {
                this.humidityFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CO2Percent
        {
            get
            {
                return this.cO2PercentField;
            }
            set
            {
                this.cO2PercentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CO2PercentSpecified
        {
            get
            {
                return this.cO2PercentFieldSpecified;
            }
            set
            {
                this.cO2PercentFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class MapM
    {

        private string kField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string K
        {
            get
            {
                return this.kField;
            }
            set
            {
                this.kField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsTemperature
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("°C")]
        C,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("°F")]
        F,

        /// <remarks/>
        K,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("°R")]
        R,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsPressure
    {

        /// <remarks/>
        YPa,

        /// <remarks/>
        ZPa,

        /// <remarks/>
        EPa,

        /// <remarks/>
        PPa,

        /// <remarks/>
        TPa,

        /// <remarks/>
        GPa,

        /// <remarks/>
        MPa,

        /// <remarks/>
        kPa,

        /// <remarks/>
        hPa,

        /// <remarks/>
        daPa,

        /// <remarks/>
        Pa,

        /// <remarks/>
        dPa,

        /// <remarks/>
        cPa,

        /// <remarks/>
        mPa,

        /// <remarks/>
        µPa,

        /// <remarks/>
        nPa,

        /// <remarks/>
        pPa,

        /// <remarks/>
        fPa,

        /// <remarks/>
        aPa,

        /// <remarks/>
        zPa,

        /// <remarks/>
        yPa,

        /// <remarks/>
        bar,

        /// <remarks/>
        Mbar,

        /// <remarks/>
        kbar,

        /// <remarks/>
        dbar,

        /// <remarks/>
        cbar,

        /// <remarks/>
        mbar,

        /// <remarks/>
        atm,

        /// <remarks/>
        psi,

        /// <remarks/>
        Torr,

        /// <remarks/>
        mTorr,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm Hg")]
        mmHg,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class StageLabel
    {

        private string nameField;

        private float xField;

        private bool xFieldSpecified;

        private UnitsLength xUnitField;

        private float yField;

        private bool yFieldSpecified;

        private UnitsLength yUnitField;

        private float zField;

        private bool zFieldSpecified;

        private UnitsLength zUnitField;

        public StageLabel()
        {
            this.xUnitField = UnitsLength.referenceframe;
            this.yUnitField = UnitsLength.referenceframe;
            this.zUnitField = UnitsLength.referenceframe;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XSpecified
        {
            get
            {
                return this.xFieldSpecified;
            }
            set
            {
                this.xFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength XUnit
        {
            get
            {
                return this.xUnitField;
            }
            set
            {
                this.xUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified
        {
            get
            {
                return this.yFieldSpecified;
            }
            set
            {
                this.yFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength YUnit
        {
            get
            {
                return this.yUnitField;
            }
            set
            {
                this.yUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Z
        {
            get
            {
                return this.zField;
            }
            set
            {
                this.zField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZSpecified
        {
            get
            {
                return this.zFieldSpecified;
            }
            set
            {
                this.zFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength ZUnit
        {
            get
            {
                return this.zUnitField;
            }
            set
            {
                this.zUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Pixels
    {

        private Channel[] channelField;

        private object[] itemsField;

        private Plane[] planeField;

        private string idField;

        private PixelsDimensionOrder dimensionOrderField;

        private PixelType typeField;

        private int significantBitsField;

        private bool significantBitsFieldSpecified;

        private bool interleavedField;

        private bool interleavedFieldSpecified;

        private bool bigEndianField;

        private bool bigEndianFieldSpecified;

        private int sizeXField;

        private int sizeYField;

        private int sizeZField;

        private int sizeCField;

        private int sizeTField;

        private float physicalSizeXField;

        private bool physicalSizeXFieldSpecified;

        private UnitsLength physicalSizeXUnitField;

        private float physicalSizeYField;

        private bool physicalSizeYFieldSpecified;

        private UnitsLength physicalSizeYUnitField;

        private float physicalSizeZField;

        private bool physicalSizeZFieldSpecified;

        private UnitsLength physicalSizeZUnitField;

        private float timeIncrementField;

        private bool timeIncrementFieldSpecified;

        private UnitsTime timeIncrementUnitField;

        public Pixels()
        {
            this.physicalSizeXUnitField = UnitsLength.µm;
            this.physicalSizeYUnitField = UnitsLength.µm;
            this.physicalSizeZUnitField = UnitsLength.µm;
            this.timeIncrementUnitField = UnitsTime.s;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Channel")]
        public Channel[] Channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BinData", typeof(BinData))]
        [System.Xml.Serialization.XmlElementAttribute("MetadataOnly", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("TiffData", typeof(TiffData))]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Plane")]
        public Plane[] Plane
        {
            get
            {
                return this.planeField;
            }
            set
            {
                this.planeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PixelsDimensionOrder DimensionOrder
        {
            get
            {
                return this.dimensionOrderField;
            }
            set
            {
                this.dimensionOrderField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PixelType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SignificantBits
        {
            get
            {
                return this.significantBitsField;
            }
            set
            {
                this.significantBitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignificantBitsSpecified
        {
            get
            {
                return this.significantBitsFieldSpecified;
            }
            set
            {
                this.significantBitsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Interleaved
        {
            get
            {
                return this.interleavedField;
            }
            set
            {
                this.interleavedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterleavedSpecified
        {
            get
            {
                return this.interleavedFieldSpecified;
            }
            set
            {
                this.interleavedFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool BigEndian
        {
            get
            {
                return this.bigEndianField;
            }
            set
            {
                this.bigEndianField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BigEndianSpecified
        {
            get
            {
                return this.bigEndianFieldSpecified;
            }
            set
            {
                this.bigEndianFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SizeX
        {
            get
            {
                return this.sizeXField;
            }
            set
            {
                this.sizeXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SizeY
        {
            get
            {
                return this.sizeYField;
            }
            set
            {
                this.sizeYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SizeZ
        {
            get
            {
                return this.sizeZField;
            }
            set
            {
                this.sizeZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SizeC
        {
            get
            {
                return this.sizeCField;
            }
            set
            {
                this.sizeCField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SizeT
        {
            get
            {
                return this.sizeTField;
            }
            set
            {
                this.sizeTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PhysicalSizeX
        {
            get
            {
                return this.physicalSizeXField;
            }
            set
            {
                this.physicalSizeXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhysicalSizeXSpecified
        {
            get
            {
                return this.physicalSizeXFieldSpecified;
            }
            set
            {
                this.physicalSizeXFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.µm)]
        public UnitsLength PhysicalSizeXUnit
        {
            get
            {
                return this.physicalSizeXUnitField;
            }
            set
            {
                this.physicalSizeXUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PhysicalSizeY
        {
            get
            {
                return this.physicalSizeYField;
            }
            set
            {
                this.physicalSizeYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhysicalSizeYSpecified
        {
            get
            {
                return this.physicalSizeYFieldSpecified;
            }
            set
            {
                this.physicalSizeYFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.µm)]
        public UnitsLength PhysicalSizeYUnit
        {
            get
            {
                return this.physicalSizeYUnitField;
            }
            set
            {
                this.physicalSizeYUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PhysicalSizeZ
        {
            get
            {
                return this.physicalSizeZField;
            }
            set
            {
                this.physicalSizeZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhysicalSizeZSpecified
        {
            get
            {
                return this.physicalSizeZFieldSpecified;
            }
            set
            {
                this.physicalSizeZFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.µm)]
        public UnitsLength PhysicalSizeZUnit
        {
            get
            {
                return this.physicalSizeZUnitField;
            }
            set
            {
                this.physicalSizeZUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float TimeIncrement
        {
            get
            {
                return this.timeIncrementField;
            }
            set
            {
                this.timeIncrementField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeIncrementSpecified
        {
            get
            {
                return this.timeIncrementFieldSpecified;
            }
            set
            {
                this.timeIncrementFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsTime.s)]
        public UnitsTime TimeIncrementUnit
        {
            get
            {
                return this.timeIncrementUnitField;
            }
            set
            {
                this.timeIncrementUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Channel
    {

        private LightSourceSettings lightSourceSettingsField;

        private DetectorSettings detectorSettingsField;

        private FilterSetRef filterSetRefField;

        private AnnotationRef[] annotationRefField;

        private LightPath lightPathField;

        private string idField;

        private string nameField;

        private int samplesPerPixelField;

        private bool samplesPerPixelFieldSpecified;

        private ChannelIlluminationType illuminationTypeField;

        private bool illuminationTypeFieldSpecified;

        private float pinholeSizeField;

        private bool pinholeSizeFieldSpecified;

        private UnitsLength pinholeSizeUnitField;

        private ChannelAcquisitionMode acquisitionModeField;

        private bool acquisitionModeFieldSpecified;

        private ChannelContrastMethod contrastMethodField;

        private bool contrastMethodFieldSpecified;

        private float excitationWavelengthField;

        private bool excitationWavelengthFieldSpecified;

        private UnitsLength excitationWavelengthUnitField;

        private float emissionWavelengthField;

        private bool emissionWavelengthFieldSpecified;

        private UnitsLength emissionWavelengthUnitField;

        private string fluorField;

        private float nDFilterField;

        private bool nDFilterFieldSpecified;

        private int pockelCellSettingField;

        private bool pockelCellSettingFieldSpecified;

        private int colorField;

        public Channel()
        {
            this.pinholeSizeUnitField = UnitsLength.µm;
            this.excitationWavelengthUnitField = UnitsLength.nm;
            this.emissionWavelengthUnitField = UnitsLength.nm;
            this.colorField = -1;
        }

        /// <remarks/>
        public LightSourceSettings LightSourceSettings
        {
            get
            {
                return this.lightSourceSettingsField;
            }
            set
            {
                this.lightSourceSettingsField = value;
            }
        }

        /// <remarks/>
        public DetectorSettings DetectorSettings
        {
            get
            {
                return this.detectorSettingsField;
            }
            set
            {
                this.detectorSettingsField = value;
            }
        }

        /// <remarks/>
        public FilterSetRef FilterSetRef
        {
            get
            {
                return this.filterSetRefField;
            }
            set
            {
                this.filterSetRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        public LightPath LightPath
        {
            get
            {
                return this.lightPathField;
            }
            set
            {
                this.lightPathField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SamplesPerPixel
        {
            get
            {
                return this.samplesPerPixelField;
            }
            set
            {
                this.samplesPerPixelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SamplesPerPixelSpecified
        {
            get
            {
                return this.samplesPerPixelFieldSpecified;
            }
            set
            {
                this.samplesPerPixelFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChannelIlluminationType IlluminationType
        {
            get
            {
                return this.illuminationTypeField;
            }
            set
            {
                this.illuminationTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IlluminationTypeSpecified
        {
            get
            {
                return this.illuminationTypeFieldSpecified;
            }
            set
            {
                this.illuminationTypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PinholeSize
        {
            get
            {
                return this.pinholeSizeField;
            }
            set
            {
                this.pinholeSizeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PinholeSizeSpecified
        {
            get
            {
                return this.pinholeSizeFieldSpecified;
            }
            set
            {
                this.pinholeSizeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.µm)]
        public UnitsLength PinholeSizeUnit
        {
            get
            {
                return this.pinholeSizeUnitField;
            }
            set
            {
                this.pinholeSizeUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChannelAcquisitionMode AcquisitionMode
        {
            get
            {
                return this.acquisitionModeField;
            }
            set
            {
                this.acquisitionModeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcquisitionModeSpecified
        {
            get
            {
                return this.acquisitionModeFieldSpecified;
            }
            set
            {
                this.acquisitionModeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChannelContrastMethod ContrastMethod
        {
            get
            {
                return this.contrastMethodField;
            }
            set
            {
                this.contrastMethodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastMethodSpecified
        {
            get
            {
                return this.contrastMethodFieldSpecified;
            }
            set
            {
                this.contrastMethodFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ExcitationWavelength
        {
            get
            {
                return this.excitationWavelengthField;
            }
            set
            {
                this.excitationWavelengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExcitationWavelengthSpecified
        {
            get
            {
                return this.excitationWavelengthFieldSpecified;
            }
            set
            {
                this.excitationWavelengthFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength ExcitationWavelengthUnit
        {
            get
            {
                return this.excitationWavelengthUnitField;
            }
            set
            {
                this.excitationWavelengthUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float EmissionWavelength
        {
            get
            {
                return this.emissionWavelengthField;
            }
            set
            {
                this.emissionWavelengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmissionWavelengthSpecified
        {
            get
            {
                return this.emissionWavelengthFieldSpecified;
            }
            set
            {
                this.emissionWavelengthFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength EmissionWavelengthUnit
        {
            get
            {
                return this.emissionWavelengthUnitField;
            }
            set
            {
                this.emissionWavelengthUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Fluor
        {
            get
            {
                return this.fluorField;
            }
            set
            {
                this.fluorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float NDFilter
        {
            get
            {
                return this.nDFilterField;
            }
            set
            {
                this.nDFilterField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NDFilterSpecified
        {
            get
            {
                return this.nDFilterFieldSpecified;
            }
            set
            {
                this.nDFilterFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PockelCellSetting
        {
            get
            {
                return this.pockelCellSettingField;
            }
            set
            {
                this.pockelCellSettingField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PockelCellSettingSpecified
        {
            get
            {
                return this.pockelCellSettingFieldSpecified;
            }
            set
            {
                this.pockelCellSettingFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Color
        {
            get
            {
                return this.colorField;
            }
            set
            {
                this.colorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class DetectorSettings : Settings
    {

        private string idField;

        private float offsetField;

        private bool offsetFieldSpecified;

        private float gainField;

        private bool gainFieldSpecified;

        private float voltageField;

        private bool voltageFieldSpecified;

        private UnitsElectricPotential voltageUnitField;

        private float zoomField;

        private bool zoomFieldSpecified;

        private float readOutRateField;

        private bool readOutRateFieldSpecified;

        private UnitsFrequency readOutRateUnitField;

        private Binning binningField;

        private bool binningFieldSpecified;

        private int integrationField;

        private bool integrationFieldSpecified;

        public DetectorSettings()
        {
            this.voltageUnitField = UnitsElectricPotential.V;
            this.readOutRateUnitField = UnitsFrequency.MHz;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetSpecified
        {
            get
            {
                return this.offsetFieldSpecified;
            }
            set
            {
                this.offsetFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Gain
        {
            get
            {
                return this.gainField;
            }
            set
            {
                this.gainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GainSpecified
        {
            get
            {
                return this.gainFieldSpecified;
            }
            set
            {
                this.gainFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Voltage
        {
            get
            {
                return this.voltageField;
            }
            set
            {
                this.voltageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VoltageSpecified
        {
            get
            {
                return this.voltageFieldSpecified;
            }
            set
            {
                this.voltageFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsElectricPotential.V)]
        public UnitsElectricPotential VoltageUnit
        {
            get
            {
                return this.voltageUnitField;
            }
            set
            {
                this.voltageUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Zoom
        {
            get
            {
                return this.zoomField;
            }
            set
            {
                this.zoomField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZoomSpecified
        {
            get
            {
                return this.zoomFieldSpecified;
            }
            set
            {
                this.zoomFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ReadOutRate
        {
            get
            {
                return this.readOutRateField;
            }
            set
            {
                this.readOutRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadOutRateSpecified
        {
            get
            {
                return this.readOutRateFieldSpecified;
            }
            set
            {
                this.readOutRateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsFrequency.MHz)]
        public UnitsFrequency ReadOutRateUnit
        {
            get
            {
                return this.readOutRateUnitField;
            }
            set
            {
                this.readOutRateUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Binning Binning
        {
            get
            {
                return this.binningField;
            }
            set
            {
                this.binningField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BinningSpecified
        {
            get
            {
                return this.binningFieldSpecified;
            }
            set
            {
                this.binningFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Integration
        {
            get
            {
                return this.integrationField;
            }
            set
            {
                this.integrationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntegrationSpecified
        {
            get
            {
                return this.integrationFieldSpecified;
            }
            set
            {
                this.integrationFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsElectricPotential
    {

        /// <remarks/>
        YV,

        /// <remarks/>
        ZV,

        /// <remarks/>
        EV,

        /// <remarks/>
        PV,

        /// <remarks/>
        TV,

        /// <remarks/>
        GV,

        /// <remarks/>
        MV,

        /// <remarks/>
        kV,

        /// <remarks/>
        hV,

        /// <remarks/>
        daV,

        /// <remarks/>
        V,

        /// <remarks/>
        dV,

        /// <remarks/>
        cV,

        /// <remarks/>
        mV,

        /// <remarks/>
        µV,

        /// <remarks/>
        nV,

        /// <remarks/>
        pV,

        /// <remarks/>
        fV,

        /// <remarks/>
        aV,

        /// <remarks/>
        zV,

        /// <remarks/>
        yV,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsFrequency
    {

        /// <remarks/>
        YHz,

        /// <remarks/>
        ZHz,

        /// <remarks/>
        EHz,

        /// <remarks/>
        PHz,

        /// <remarks/>
        THz,

        /// <remarks/>
        GHz,

        /// <remarks/>
        MHz,

        /// <remarks/>
        kHz,

        /// <remarks/>
        hHz,

        /// <remarks/>
        daHz,

        /// <remarks/>
        Hz,

        /// <remarks/>
        dHz,

        /// <remarks/>
        cHz,

        /// <remarks/>
        mHz,

        /// <remarks/>
        µHz,

        /// <remarks/>
        nHz,

        /// <remarks/>
        pHz,

        /// <remarks/>
        fHz,

        /// <remarks/>
        aHz,

        /// <remarks/>
        zHz,

        /// <remarks/>
        yHz,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum Binning
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1x1")]
        Item1x1,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2x2")]
        Item2x2,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4x4")]
        Item4x4,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8x8")]
        Item8x8,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class FilterSetRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class LightPath
    {

        private FilterRef[] excitationFilterRefField;

        private DichroicRef dichroicRefField;

        private FilterRef[] emissionFilterRefField;

        private AnnotationRef[] annotationRefField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExcitationFilterRef")]
        public FilterRef[] ExcitationFilterRef
        {
            get
            {
                return this.excitationFilterRefField;
            }
            set
            {
                this.excitationFilterRefField = value;
            }
        }

        /// <remarks/>
        public DichroicRef DichroicRef
        {
            get
            {
                return this.dichroicRefField;
            }
            set
            {
                this.dichroicRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EmissionFilterRef")]
        public FilterRef[] EmissionFilterRef
        {
            get
            {
                return this.emissionFilterRefField;
            }
            set
            {
                this.emissionFilterRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class DichroicRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ChannelIlluminationType
    {

        /// <remarks/>
        Transmitted,

        /// <remarks/>
        Epifluorescence,

        /// <remarks/>
        Oblique,

        /// <remarks/>
        NonLinear,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ChannelAcquisitionMode
    {

        /// <remarks/>
        WideField,

        /// <remarks/>
        LaserScanningConfocalMicroscopy,

        /// <remarks/>
        SpinningDiskConfocal,

        /// <remarks/>
        SlitScanConfocal,

        /// <remarks/>
        MultiPhotonMicroscopy,

        /// <remarks/>
        StructuredIllumination,

        /// <remarks/>
        SingleMoleculeImaging,

        /// <remarks/>
        TotalInternalReflection,

        /// <remarks/>
        FluorescenceLifetime,

        /// <remarks/>
        SpectralImaging,

        /// <remarks/>
        FluorescenceCorrelationSpectroscopy,

        /// <remarks/>
        NearFieldScanningOpticalMicroscopy,

        /// <remarks/>
        SecondHarmonicGenerationImaging,

        /// <remarks/>
        PALM,

        /// <remarks/>
        STORM,

        /// <remarks/>
        STED,

        /// <remarks/>
        TIRF,

        /// <remarks/>
        FSM,

        /// <remarks/>
        LCM,

        /// <remarks/>
        Other,

        /// <remarks/>
        BrightField,

        /// <remarks/>
        SweptFieldConfocal,

        /// <remarks/>
        SPIM,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ChannelContrastMethod
    {

        /// <remarks/>
        Brightfield,

        /// <remarks/>
        Phase,

        /// <remarks/>
        DIC,

        /// <remarks/>
        HoffmanModulation,

        /// <remarks/>
        ObliqueIllumination,

        /// <remarks/>
        PolarizedLight,

        /// <remarks/>
        Darkfield,

        /// <remarks/>
        Fluorescence,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class BinData
    {

        private BinDataCompression compressionField;

        private bool bigEndianField;

        private long lengthField;

        private byte[] valueField;

        public BinData()
        {
            this.compressionField = BinDataCompression.none;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(BinDataCompression.none)]
        public BinDataCompression Compression
        {
            get
            {
                return this.compressionField;
            }
            set
            {
                this.compressionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool BigEndian
        {
            get
            {
                return this.bigEndianField;
            }
            set
            {
                this.bigEndianField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "base64Binary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum BinDataCompression
    {

        /// <remarks/>
        zlib,

        /// <remarks/>
        bzip2,

        /// <remarks/>
        none,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class TiffData
    {

        private TiffDataUUID uUIDField;

        private int iFDField;

        private int firstZField;

        private int firstTField;

        private int firstCField;

        private int planeCountField;

        private bool planeCountFieldSpecified;

        public TiffData()
        {
            this.iFDField = 0;
            this.firstZField = 0;
            this.firstTField = 0;
            this.firstCField = 0;
        }

        /// <remarks/>
        public TiffDataUUID UUID
        {
            get
            {
                return this.uUIDField;
            }
            set
            {
                this.uUIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int IFD
        {
            get
            {
                return this.iFDField;
            }
            set
            {
                this.iFDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int FirstZ
        {
            get
            {
                return this.firstZField;
            }
            set
            {
                this.firstZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int FirstT
        {
            get
            {
                return this.firstTField;
            }
            set
            {
                this.firstTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int FirstC
        {
            get
            {
                return this.firstCField;
            }
            set
            {
                this.firstCField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PlaneCount
        {
            get
            {
                return this.planeCountField;
            }
            set
            {
                this.planeCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlaneCountSpecified
        {
            get
            {
                return this.planeCountFieldSpecified;
            }
            set
            {
                this.planeCountFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class TiffDataUUID
    {

        private string fileNameField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "anyURI")]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Plane
    {

        private byte[] itemField;

        private AnnotationRef[] annotationRefField;

        private int theZField;

        private int theTField;

        private int theCField;

        private float deltaTField;

        private bool deltaTFieldSpecified;

        private UnitsTime deltaTUnitField;

        private float exposureTimeField;

        private bool exposureTimeFieldSpecified;

        private UnitsTime exposureTimeUnitField;

        private float positionXField;

        private bool positionXFieldSpecified;

        private UnitsLength positionXUnitField;

        private float positionYField;

        private bool positionYFieldSpecified;

        private UnitsLength positionYUnitField;

        private float positionZField;

        private bool positionZFieldSpecified;

        private UnitsLength positionZUnitField;

        public Plane()
        {
            this.deltaTUnitField = UnitsTime.s;
            this.exposureTimeUnitField = UnitsTime.s;
            this.positionXUnitField = UnitsLength.referenceframe;
            this.positionYUnitField = UnitsLength.referenceframe;
            this.positionZUnitField = UnitsLength.referenceframe;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HashSHA1", DataType = "hexBinary")]
        public byte[] Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheZ
        {
            get
            {
                return this.theZField;
            }
            set
            {
                this.theZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheT
        {
            get
            {
                return this.theTField;
            }
            set
            {
                this.theTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TheC
        {
            get
            {
                return this.theCField;
            }
            set
            {
                this.theCField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float DeltaT
        {
            get
            {
                return this.deltaTField;
            }
            set
            {
                this.deltaTField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeltaTSpecified
        {
            get
            {
                return this.deltaTFieldSpecified;
            }
            set
            {
                this.deltaTFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsTime.s)]
        public UnitsTime DeltaTUnit
        {
            get
            {
                return this.deltaTUnitField;
            }
            set
            {
                this.deltaTUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float ExposureTime
        {
            get
            {
                return this.exposureTimeField;
            }
            set
            {
                this.exposureTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExposureTimeSpecified
        {
            get
            {
                return this.exposureTimeFieldSpecified;
            }
            set
            {
                this.exposureTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsTime.s)]
        public UnitsTime ExposureTimeUnit
        {
            get
            {
                return this.exposureTimeUnitField;
            }
            set
            {
                this.exposureTimeUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PositionX
        {
            get
            {
                return this.positionXField;
            }
            set
            {
                this.positionXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionXSpecified
        {
            get
            {
                return this.positionXFieldSpecified;
            }
            set
            {
                this.positionXFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength PositionXUnit
        {
            get
            {
                return this.positionXUnitField;
            }
            set
            {
                this.positionXUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PositionY
        {
            get
            {
                return this.positionYField;
            }
            set
            {
                this.positionYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionYSpecified
        {
            get
            {
                return this.positionYFieldSpecified;
            }
            set
            {
                this.positionYFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength PositionYUnit
        {
            get
            {
                return this.positionYUnitField;
            }
            set
            {
                this.positionYUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PositionZ
        {
            get
            {
                return this.positionZField;
            }
            set
            {
                this.positionZField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionZSpecified
        {
            get
            {
                return this.positionZFieldSpecified;
            }
            set
            {
                this.positionZFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength PositionZUnit
        {
            get
            {
                return this.positionZUnitField;
            }
            set
            {
                this.positionZUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum UnitsTime
    {

        /// <remarks/>
        Ys,

        /// <remarks/>
        Zs,

        /// <remarks/>
        Es,

        /// <remarks/>
        Ps,

        /// <remarks/>
        Ts,

        /// <remarks/>
        Gs,

        /// <remarks/>
        Ms,

        /// <remarks/>
        ks,

        /// <remarks/>
        hs,

        /// <remarks/>
        das,

        /// <remarks/>
        s,

        /// <remarks/>
        ds,

        /// <remarks/>
        cs,

        /// <remarks/>
        ms,

        /// <remarks/>
        µs,

        /// <remarks/>
        ns,

        /// <remarks/>
        ps,

        /// <remarks/>
        fs,

        /// <remarks/>
        @as,

        /// <remarks/>
        zs,

        /// <remarks/>
        ys,

        /// <remarks/>
        min,

        /// <remarks/>
        h,

        /// <remarks/>
        d,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum PixelsDimensionOrder
    {

        /// <remarks/>
        XYZCT,

        /// <remarks/>
        XYZTC,

        /// <remarks/>
        XYCTZ,

        /// <remarks/>
        XYCZT,

        /// <remarks/>
        XYTCZ,

        /// <remarks/>
        XYTZC,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum PixelType
    {

        /// <remarks/>
        int8,

        /// <remarks/>
        int16,

        /// <remarks/>
        int32,

        /// <remarks/>
        uint8,

        /// <remarks/>
        uint16,

        /// <remarks/>
        uint32,

        /// <remarks/>
        @float,

        /// <remarks/>
        @double,

        /// <remarks/>
        complex,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("double-complex")]
        doublecomplex,

        /// <remarks/>
        bit,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class MicrobeamManipulationRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Instrument
    {

        private Microscope microscopeField;

        private LightSource[] itemsField;

        private Detector[] detectorField;

        private Objective[] objectiveField;

        private FilterSet[] filterSetField;

        private Filter[] filterField;

        private Dichroic[] dichroicField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        /// <remarks/>
        public Microscope Microscope
        {
            get
            {
                return this.microscopeField;
            }
            set
            {
                this.microscopeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Arc", typeof(InstrumentLightSourceGroupArc))]
        [System.Xml.Serialization.XmlElementAttribute("Filament", typeof(InstrumentLightSourceGroupFilament))]
        [System.Xml.Serialization.XmlElementAttribute("GenericExcitationSource", typeof(InstrumentLightSourceGroupGenericExcitationSource))]
        [System.Xml.Serialization.XmlElementAttribute("Laser", typeof(InstrumentLightSourceGroupLaser))]
        [System.Xml.Serialization.XmlElementAttribute("LightEmittingDiode", typeof(InstrumentLightSourceGroupLightEmittingDiode))]
        public LightSource[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Detector")]
        public Detector[] Detector
        {
            get
            {
                return this.detectorField;
            }
            set
            {
                this.detectorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Objective")]
        public Objective[] Objective
        {
            get
            {
                return this.objectiveField;
            }
            set
            {
                this.objectiveField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterSet")]
        public FilterSet[] FilterSet
        {
            get
            {
                return this.filterSetField;
            }
            set
            {
                this.filterSetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filter")]
        public Filter[] Filter
        {
            get
            {
                return this.filterField;
            }
            set
            {
                this.filterField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dichroic")]
        public Dichroic[] Dichroic
        {
            get
            {
                return this.dichroicField;
            }
            set
            {
                this.dichroicField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Microscope : ManufacturerSpec
    {

        private MicroscopeType typeField;

        private bool typeFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MicroscopeType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum MicroscopeType
    {

        /// <remarks/>
        Upright,

        /// <remarks/>
        Inverted,

        /// <remarks/>
        Dissection,

        /// <remarks/>
        Electrophysiology,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Arc", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentLightSourceGroupArc : LightSource
    {

        private InstrumentLightSourceGroupArcType typeField;

        private bool typeFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public InstrumentLightSourceGroupArcType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum InstrumentLightSourceGroupArcType
    {

        /// <remarks/>
        Hg,

        /// <remarks/>
        Xe,

        /// <remarks/>
        HgXe,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Filament", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentLightSourceGroupFilament : LightSource
    {

        private InstrumentLightSourceGroupFilamentType typeField;

        private bool typeFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public InstrumentLightSourceGroupFilamentType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum InstrumentLightSourceGroupFilamentType
    {

        /// <remarks/>
        Incandescent,

        /// <remarks/>
        Halogen,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("GenericExcitationSource", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentLightSourceGroupGenericExcitationSource : LightSource
    {

        private MapM[] mapField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("M", IsNullable = false)]
        public MapM[] Map
        {
            get
            {
                return this.mapField;
            }
            set
            {
                this.mapField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Laser", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentLightSourceGroupLaser : LightSource
    {

        private Pump pumpField;

        private InstrumentLightSourceGroupLaserType typeField;

        private bool typeFieldSpecified;

        private InstrumentLightSourceGroupLaserLaserMedium laserMediumField;

        private bool laserMediumFieldSpecified;

        private float wavelengthField;

        private bool wavelengthFieldSpecified;

        private UnitsLength wavelengthUnitField;

        private int frequencyMultiplicationField;

        private bool frequencyMultiplicationFieldSpecified;

        private bool tuneableField;

        private bool tuneableFieldSpecified;

        private InstrumentLightSourceGroupLaserPulse pulseField;

        private bool pulseFieldSpecified;

        private bool pockelCellField;

        private bool pockelCellFieldSpecified;

        private float repetitionRateField;

        private bool repetitionRateFieldSpecified;

        private UnitsFrequency repetitionRateUnitField;

        public InstrumentLightSourceGroupLaser()
        {
            this.wavelengthUnitField = UnitsLength.nm;
            this.repetitionRateUnitField = UnitsFrequency.Hz;
        }

        /// <remarks/>
        public Pump Pump
        {
            get
            {
                return this.pumpField;
            }
            set
            {
                this.pumpField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public InstrumentLightSourceGroupLaserType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public InstrumentLightSourceGroupLaserLaserMedium LaserMedium
        {
            get
            {
                return this.laserMediumField;
            }
            set
            {
                this.laserMediumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LaserMediumSpecified
        {
            get
            {
                return this.laserMediumFieldSpecified;
            }
            set
            {
                this.laserMediumFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Wavelength
        {
            get
            {
                return this.wavelengthField;
            }
            set
            {
                this.wavelengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WavelengthSpecified
        {
            get
            {
                return this.wavelengthFieldSpecified;
            }
            set
            {
                this.wavelengthFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength WavelengthUnit
        {
            get
            {
                return this.wavelengthUnitField;
            }
            set
            {
                this.wavelengthUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int FrequencyMultiplication
        {
            get
            {
                return this.frequencyMultiplicationField;
            }
            set
            {
                this.frequencyMultiplicationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FrequencyMultiplicationSpecified
        {
            get
            {
                return this.frequencyMultiplicationFieldSpecified;
            }
            set
            {
                this.frequencyMultiplicationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Tuneable
        {
            get
            {
                return this.tuneableField;
            }
            set
            {
                this.tuneableField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TuneableSpecified
        {
            get
            {
                return this.tuneableFieldSpecified;
            }
            set
            {
                this.tuneableFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public InstrumentLightSourceGroupLaserPulse Pulse
        {
            get
            {
                return this.pulseField;
            }
            set
            {
                this.pulseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PulseSpecified
        {
            get
            {
                return this.pulseFieldSpecified;
            }
            set
            {
                this.pulseFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PockelCell
        {
            get
            {
                return this.pockelCellField;
            }
            set
            {
                this.pockelCellField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PockelCellSpecified
        {
            get
            {
                return this.pockelCellFieldSpecified;
            }
            set
            {
                this.pockelCellFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float RepetitionRate
        {
            get
            {
                return this.repetitionRateField;
            }
            set
            {
                this.repetitionRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RepetitionRateSpecified
        {
            get
            {
                return this.repetitionRateFieldSpecified;
            }
            set
            {
                this.repetitionRateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsFrequency.Hz)]
        public UnitsFrequency RepetitionRateUnit
        {
            get
            {
                return this.repetitionRateUnitField;
            }
            set
            {
                this.repetitionRateUnitField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Pump : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum InstrumentLightSourceGroupLaserType
    {

        /// <remarks/>
        Excimer,

        /// <remarks/>
        Gas,

        /// <remarks/>
        MetalVapor,

        /// <remarks/>
        SolidState,

        /// <remarks/>
        Dye,

        /// <remarks/>
        Semiconductor,

        /// <remarks/>
        FreeElectron,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum InstrumentLightSourceGroupLaserLaserMedium
    {

        /// <remarks/>
        Cu,

        /// <remarks/>
        Ag,

        /// <remarks/>
        ArFl,

        /// <remarks/>
        ArCl,

        /// <remarks/>
        KrFl,

        /// <remarks/>
        KrCl,

        /// <remarks/>
        XeFl,

        /// <remarks/>
        XeCl,

        /// <remarks/>
        XeBr,

        /// <remarks/>
        N,

        /// <remarks/>
        Ar,

        /// <remarks/>
        Kr,

        /// <remarks/>
        Xe,

        /// <remarks/>
        HeNe,

        /// <remarks/>
        HeCd,

        /// <remarks/>
        CO,

        /// <remarks/>
        CO2,

        /// <remarks/>
        H2O,

        /// <remarks/>
        HFl,

        /// <remarks/>
        NdGlass,

        /// <remarks/>
        NdYAG,

        /// <remarks/>
        ErGlass,

        /// <remarks/>
        ErYAG,

        /// <remarks/>
        HoYLF,

        /// <remarks/>
        HoYAG,

        /// <remarks/>
        Ruby,

        /// <remarks/>
        TiSapphire,

        /// <remarks/>
        Alexandrite,

        /// <remarks/>
        Rhodamine6G,

        /// <remarks/>
        CoumarinC30,

        /// <remarks/>
        GaAs,

        /// <remarks/>
        GaAlAs,

        /// <remarks/>
        EMinus,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum InstrumentLightSourceGroupLaserPulse
    {

        /// <remarks/>
        CW,

        /// <remarks/>
        Single,

        /// <remarks/>
        QSwitched,

        /// <remarks/>
        Repetitive,

        /// <remarks/>
        ModeLocked,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("LightEmittingDiode", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class InstrumentLightSourceGroupLightEmittingDiode : LightSource
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Detector : ManufacturerSpec
    {

        private AnnotationRef[] annotationRefField;

        private float gainField;

        private bool gainFieldSpecified;

        private float voltageField;

        private bool voltageFieldSpecified;

        private UnitsElectricPotential voltageUnitField;

        private float offsetField;

        private bool offsetFieldSpecified;

        private float zoomField;

        private bool zoomFieldSpecified;

        private float amplificationGainField;

        private bool amplificationGainFieldSpecified;

        private string idField;

        private DetectorType typeField;

        private bool typeFieldSpecified;

        public Detector()
        {
            this.voltageUnitField = UnitsElectricPotential.V;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Gain
        {
            get
            {
                return this.gainField;
            }
            set
            {
                this.gainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GainSpecified
        {
            get
            {
                return this.gainFieldSpecified;
            }
            set
            {
                this.gainFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Voltage
        {
            get
            {
                return this.voltageField;
            }
            set
            {
                this.voltageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VoltageSpecified
        {
            get
            {
                return this.voltageFieldSpecified;
            }
            set
            {
                this.voltageFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsElectricPotential.V)]
        public UnitsElectricPotential VoltageUnit
        {
            get
            {
                return this.voltageUnitField;
            }
            set
            {
                this.voltageUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetSpecified
        {
            get
            {
                return this.offsetFieldSpecified;
            }
            set
            {
                this.offsetFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Zoom
        {
            get
            {
                return this.zoomField;
            }
            set
            {
                this.zoomField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZoomSpecified
        {
            get
            {
                return this.zoomFieldSpecified;
            }
            set
            {
                this.zoomFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float AmplificationGain
        {
            get
            {
                return this.amplificationGainField;
            }
            set
            {
                this.amplificationGainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmplificationGainSpecified
        {
            get
            {
                return this.amplificationGainFieldSpecified;
            }
            set
            {
                this.amplificationGainFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DetectorType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum DetectorType
    {

        /// <remarks/>
        CCD,

        /// <remarks/>
        IntensifiedCCD,

        /// <remarks/>
        AnalogVideo,

        /// <remarks/>
        PMT,

        /// <remarks/>
        Photodiode,

        /// <remarks/>
        Spectroscopy,

        /// <remarks/>
        LifetimeImaging,

        /// <remarks/>
        CorrelationSpectroscopy,

        /// <remarks/>
        FTIR,

        /// <remarks/>
        EMCCD,

        /// <remarks/>
        APD,

        /// <remarks/>
        CMOS,

        /// <remarks/>
        EBCCD,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Objective : ManufacturerSpec
    {

        private AnnotationRef[] annotationRefField;

        private string idField;

        private ObjectiveCorrection correctionField;

        private bool correctionFieldSpecified;

        private ObjectiveImmersion immersionField;

        private bool immersionFieldSpecified;

        private float lensNAField;

        private bool lensNAFieldSpecified;

        private float nominalMagnificationField;

        private bool nominalMagnificationFieldSpecified;

        private float calibratedMagnificationField;

        private bool calibratedMagnificationFieldSpecified;

        private float workingDistanceField;

        private bool workingDistanceFieldSpecified;

        private UnitsLength workingDistanceUnitField;

        private bool irisField;

        private bool irisFieldSpecified;

        public Objective()
        {
            this.workingDistanceUnitField = UnitsLength.µm;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ObjectiveCorrection Correction
        {
            get
            {
                return this.correctionField;
            }
            set
            {
                this.correctionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CorrectionSpecified
        {
            get
            {
                return this.correctionFieldSpecified;
            }
            set
            {
                this.correctionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ObjectiveImmersion Immersion
        {
            get
            {
                return this.immersionField;
            }
            set
            {
                this.immersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImmersionSpecified
        {
            get
            {
                return this.immersionFieldSpecified;
            }
            set
            {
                this.immersionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float LensNA
        {
            get
            {
                return this.lensNAField;
            }
            set
            {
                this.lensNAField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LensNASpecified
        {
            get
            {
                return this.lensNAFieldSpecified;
            }
            set
            {
                this.lensNAFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float NominalMagnification
        {
            get
            {
                return this.nominalMagnificationField;
            }
            set
            {
                this.nominalMagnificationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NominalMagnificationSpecified
        {
            get
            {
                return this.nominalMagnificationFieldSpecified;
            }
            set
            {
                this.nominalMagnificationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CalibratedMagnification
        {
            get
            {
                return this.calibratedMagnificationField;
            }
            set
            {
                this.calibratedMagnificationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalibratedMagnificationSpecified
        {
            get
            {
                return this.calibratedMagnificationFieldSpecified;
            }
            set
            {
                this.calibratedMagnificationFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float WorkingDistance
        {
            get
            {
                return this.workingDistanceField;
            }
            set
            {
                this.workingDistanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkingDistanceSpecified
        {
            get
            {
                return this.workingDistanceFieldSpecified;
            }
            set
            {
                this.workingDistanceFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.µm)]
        public UnitsLength WorkingDistanceUnit
        {
            get
            {
                return this.workingDistanceUnitField;
            }
            set
            {
                this.workingDistanceUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Iris
        {
            get
            {
                return this.irisField;
            }
            set
            {
                this.irisField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrisSpecified
        {
            get
            {
                return this.irisFieldSpecified;
            }
            set
            {
                this.irisFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ObjectiveCorrection
    {

        /// <remarks/>
        UV,

        /// <remarks/>
        PlanApo,

        /// <remarks/>
        PlanFluor,

        /// <remarks/>
        SuperFluor,

        /// <remarks/>
        VioletCorrected,

        /// <remarks/>
        Achro,

        /// <remarks/>
        Achromat,

        /// <remarks/>
        Fluor,

        /// <remarks/>
        Fl,

        /// <remarks/>
        Fluar,

        /// <remarks/>
        Neofluar,

        /// <remarks/>
        Fluotar,

        /// <remarks/>
        Apo,

        /// <remarks/>
        PlanNeofluar,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ObjectiveImmersion
    {

        /// <remarks/>
        Oil,

        /// <remarks/>
        Water,

        /// <remarks/>
        WaterDipping,

        /// <remarks/>
        Air,

        /// <remarks/>
        Multi,

        /// <remarks/>
        Glycerol,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class FilterSet : ManufacturerSpec
    {

        private FilterRef[] excitationFilterRefField;

        private DichroicRef dichroicRefField;

        private FilterRef[] emissionFilterRefField;

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExcitationFilterRef")]
        public FilterRef[] ExcitationFilterRef
        {
            get
            {
                return this.excitationFilterRefField;
            }
            set
            {
                this.excitationFilterRefField = value;
            }
        }

        /// <remarks/>
        public DichroicRef DichroicRef
        {
            get
            {
                return this.dichroicRefField;
            }
            set
            {
                this.dichroicRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EmissionFilterRef")]
        public FilterRef[] EmissionFilterRef
        {
            get
            {
                return this.emissionFilterRefField;
            }
            set
            {
                this.emissionFilterRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Filter : ManufacturerSpec
    {

        private TransmittanceRange transmittanceRangeField;

        private AnnotationRef[] annotationRefField;

        private FilterType typeField;

        private bool typeFieldSpecified;

        private string filterWheelField;

        private string idField;

        /// <remarks/>
        public TransmittanceRange TransmittanceRange
        {
            get
            {
                return this.transmittanceRangeField;
            }
            set
            {
                this.transmittanceRangeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FilterType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                this.typeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FilterWheel
        {
            get
            {
                return this.filterWheelField;
            }
            set
            {
                this.filterWheelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class TransmittanceRange
    {

        private float cutInField;

        private bool cutInFieldSpecified;

        private UnitsLength cutInUnitField;

        private float cutOutField;

        private bool cutOutFieldSpecified;

        private UnitsLength cutOutUnitField;

        private float cutInToleranceField;

        private bool cutInToleranceFieldSpecified;

        private UnitsLength cutInToleranceUnitField;

        private float cutOutToleranceField;

        private bool cutOutToleranceFieldSpecified;

        private UnitsLength cutOutToleranceUnitField;

        private float transmittanceField;

        private bool transmittanceFieldSpecified;

        public TransmittanceRange()
        {
            this.cutInUnitField = UnitsLength.nm;
            this.cutOutUnitField = UnitsLength.nm;
            this.cutInToleranceUnitField = UnitsLength.nm;
            this.cutOutToleranceUnitField = UnitsLength.nm;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CutIn
        {
            get
            {
                return this.cutInField;
            }
            set
            {
                this.cutInField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutInSpecified
        {
            get
            {
                return this.cutInFieldSpecified;
            }
            set
            {
                this.cutInFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength CutInUnit
        {
            get
            {
                return this.cutInUnitField;
            }
            set
            {
                this.cutInUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CutOut
        {
            get
            {
                return this.cutOutField;
            }
            set
            {
                this.cutOutField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutOutSpecified
        {
            get
            {
                return this.cutOutFieldSpecified;
            }
            set
            {
                this.cutOutFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength CutOutUnit
        {
            get
            {
                return this.cutOutUnitField;
            }
            set
            {
                this.cutOutUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CutInTolerance
        {
            get
            {
                return this.cutInToleranceField;
            }
            set
            {
                this.cutInToleranceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutInToleranceSpecified
        {
            get
            {
                return this.cutInToleranceFieldSpecified;
            }
            set
            {
                this.cutInToleranceFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength CutInToleranceUnit
        {
            get
            {
                return this.cutInToleranceUnitField;
            }
            set
            {
                this.cutInToleranceUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float CutOutTolerance
        {
            get
            {
                return this.cutOutToleranceField;
            }
            set
            {
                this.cutOutToleranceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CutOutToleranceSpecified
        {
            get
            {
                return this.cutOutToleranceFieldSpecified;
            }
            set
            {
                this.cutOutToleranceFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.nm)]
        public UnitsLength CutOutToleranceUnit
        {
            get
            {
                return this.cutOutToleranceUnitField;
            }
            set
            {
                this.cutOutToleranceUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Transmittance
        {
            get
            {
                return this.transmittanceField;
            }
            set
            {
                this.transmittanceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransmittanceSpecified
        {
            get
            {
                return this.transmittanceFieldSpecified;
            }
            set
            {
                this.transmittanceFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum FilterType
    {

        /// <remarks/>
        Dichroic,

        /// <remarks/>
        LongPass,

        /// <remarks/>
        ShortPass,

        /// <remarks/>
        BandPass,

        /// <remarks/>
        MultiPass,

        /// <remarks/>
        NeutralDensity,

        /// <remarks/>
        Tuneable,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Dichroic : ManufacturerSpec
    {

        private AnnotationRef[] annotationRefField;

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Plate
    {

        private string descriptionField;

        private Well[] wellField;

        private AnnotationRef[] annotationRefField;

        private PlateAcquisition[] plateAcquisitionField;

        private string idField;

        private string nameField;

        private string statusField;

        private string externalIdentifierField;

        private NamingConvention columnNamingConventionField;

        private bool columnNamingConventionFieldSpecified;

        private NamingConvention rowNamingConventionField;

        private bool rowNamingConventionFieldSpecified;

        private float wellOriginXField;

        private bool wellOriginXFieldSpecified;

        private UnitsLength wellOriginXUnitField;

        private float wellOriginYField;

        private bool wellOriginYFieldSpecified;

        private UnitsLength wellOriginYUnitField;

        private int rowsField;

        private bool rowsFieldSpecified;

        private int columnsField;

        private bool columnsFieldSpecified;

        private int fieldIndexField;

        private bool fieldIndexFieldSpecified;

        public Plate()
        {
            this.wellOriginXUnitField = UnitsLength.referenceframe;
            this.wellOriginYUnitField = UnitsLength.referenceframe;
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Well")]
        public Well[] Well
        {
            get
            {
                return this.wellField;
            }
            set
            {
                this.wellField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PlateAcquisition")]
        public PlateAcquisition[] PlateAcquisition
        {
            get
            {
                return this.plateAcquisitionField;
            }
            set
            {
                this.plateAcquisitionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalIdentifier
        {
            get
            {
                return this.externalIdentifierField;
            }
            set
            {
                this.externalIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public NamingConvention ColumnNamingConvention
        {
            get
            {
                return this.columnNamingConventionField;
            }
            set
            {
                this.columnNamingConventionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnNamingConventionSpecified
        {
            get
            {
                return this.columnNamingConventionFieldSpecified;
            }
            set
            {
                this.columnNamingConventionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public NamingConvention RowNamingConvention
        {
            get
            {
                return this.rowNamingConventionField;
            }
            set
            {
                this.rowNamingConventionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowNamingConventionSpecified
        {
            get
            {
                return this.rowNamingConventionFieldSpecified;
            }
            set
            {
                this.rowNamingConventionFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float WellOriginX
        {
            get
            {
                return this.wellOriginXField;
            }
            set
            {
                this.wellOriginXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WellOriginXSpecified
        {
            get
            {
                return this.wellOriginXFieldSpecified;
            }
            set
            {
                this.wellOriginXFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength WellOriginXUnit
        {
            get
            {
                return this.wellOriginXUnitField;
            }
            set
            {
                this.wellOriginXUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float WellOriginY
        {
            get
            {
                return this.wellOriginYField;
            }
            set
            {
                this.wellOriginYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WellOriginYSpecified
        {
            get
            {
                return this.wellOriginYFieldSpecified;
            }
            set
            {
                this.wellOriginYFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength WellOriginYUnit
        {
            get
            {
                return this.wellOriginYUnitField;
            }
            set
            {
                this.wellOriginYUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Rows
        {
            get
            {
                return this.rowsField;
            }
            set
            {
                this.rowsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowsSpecified
        {
            get
            {
                return this.rowsFieldSpecified;
            }
            set
            {
                this.rowsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Columns
        {
            get
            {
                return this.columnsField;
            }
            set
            {
                this.columnsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnsSpecified
        {
            get
            {
                return this.columnsFieldSpecified;
            }
            set
            {
                this.columnsFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int FieldIndex
        {
            get
            {
                return this.fieldIndexField;
            }
            set
            {
                this.fieldIndexField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldIndexSpecified
        {
            get
            {
                return this.fieldIndexFieldSpecified;
            }
            set
            {
                this.fieldIndexFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Well
    {

        private WellSample[] wellSampleField;

        private ReagentRef reagentRefField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private int columnField;

        private int rowField;

        private string externalDescriptionField;

        private string externalIdentifierField;

        private string typeField;

        private int colorField;

        public Well()
        {
            this.colorField = -1;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellSample")]
        public WellSample[] WellSample
        {
            get
            {
                return this.wellSampleField;
            }
            set
            {
                this.wellSampleField = value;
            }
        }

        /// <remarks/>
        public ReagentRef ReagentRef
        {
            get
            {
                return this.reagentRefField;
            }
            set
            {
                this.reagentRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Row
        {
            get
            {
                return this.rowField;
            }
            set
            {
                this.rowField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalDescription
        {
            get
            {
                return this.externalDescriptionField;
            }
            set
            {
                this.externalDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExternalIdentifier
        {
            get
            {
                return this.externalIdentifierField;
            }
            set
            {
                this.externalIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int Color
        {
            get
            {
                return this.colorField;
            }
            set
            {
                this.colorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class WellSample
    {

        private ImageRef imageRefField;

        private string idField;

        private float positionXField;

        private bool positionXFieldSpecified;

        private UnitsLength positionXUnitField;

        private float positionYField;

        private bool positionYFieldSpecified;

        private UnitsLength positionYUnitField;

        private System.DateTime timepointField;

        private bool timepointFieldSpecified;

        private int indexField;

        public WellSample()
        {
            this.positionXUnitField = UnitsLength.referenceframe;
            this.positionYUnitField = UnitsLength.referenceframe;
        }

        /// <remarks/>
        public ImageRef ImageRef
        {
            get
            {
                return this.imageRefField;
            }
            set
            {
                this.imageRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PositionX
        {
            get
            {
                return this.positionXField;
            }
            set
            {
                this.positionXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionXSpecified
        {
            get
            {
                return this.positionXFieldSpecified;
            }
            set
            {
                this.positionXFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength PositionXUnit
        {
            get
            {
                return this.positionXUnitField;
            }
            set
            {
                this.positionXUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float PositionY
        {
            get
            {
                return this.positionYField;
            }
            set
            {
                this.positionYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionYSpecified
        {
            get
            {
                return this.positionYFieldSpecified;
            }
            set
            {
                this.positionYFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(UnitsLength.referenceframe)]
        public UnitsLength PositionYUnit
        {
            get
            {
                return this.positionYUnitField;
            }
            set
            {
                this.positionYUnitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime Timepoint
        {
            get
            {
                return this.timepointField;
            }
            set
            {
                this.timepointField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimepointSpecified
        {
            get
            {
                return this.timepointFieldSpecified;
            }
            set
            {
                this.timepointFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Index
        {
            get
            {
                return this.indexField;
            }
            set
            {
                this.indexField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ReagentRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class PlateAcquisition
    {

        private string descriptionField;

        private WellSampleRef[] wellSampleRefField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string nameField;

        private System.DateTime endTimeField;

        private bool endTimeFieldSpecified;

        private System.DateTime startTimeField;

        private bool startTimeFieldSpecified;

        private int maximumFieldCountField;

        private bool maximumFieldCountFieldSpecified;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WellSampleRef")]
        public WellSampleRef[] WellSampleRef
        {
            get
            {
                return this.wellSampleRefField;
            }
            set
            {
                this.wellSampleRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime EndTime
        {
            get
            {
                return this.endTimeField;
            }
            set
            {
                this.endTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified
        {
            get
            {
                return this.endTimeFieldSpecified;
            }
            set
            {
                this.endTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.startTimeField;
            }
            set
            {
                this.startTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified
        {
            get
            {
                return this.startTimeFieldSpecified;
            }
            set
            {
                this.startTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaximumFieldCount
        {
            get
            {
                return this.maximumFieldCountField;
            }
            set
            {
                this.maximumFieldCountField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumFieldCountSpecified
        {
            get
            {
                return this.maximumFieldCountFieldSpecified;
            }
            set
            {
                this.maximumFieldCountFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class WellSampleRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum NamingConvention
    {

        /// <remarks/>
        letter,

        /// <remarks/>
        number,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Project
    {

        private string descriptionField;

        private ExperimenterRef experimenterRefField;

        private ExperimenterGroupRef experimenterGroupRefField;

        private DatasetRef[] datasetRefField;

        private AnnotationRef[] annotationRefField;

        private string nameField;

        private string idField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public ExperimenterRef ExperimenterRef
        {
            get
            {
                return this.experimenterRefField;
            }
            set
            {
                this.experimenterRefField = value;
            }
        }

        /// <remarks/>
        public ExperimenterGroupRef ExperimenterGroupRef
        {
            get
            {
                return this.experimenterGroupRefField;
            }
            set
            {
                this.experimenterGroupRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DatasetRef")]
        public DatasetRef[] DatasetRef
        {
            get
            {
                return this.datasetRefField;
            }
            set
            {
                this.datasetRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class DatasetRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROI
    {

        private ROIUnion itemField;

        private AnnotationRef[] annotationRefField;

        private string descriptionField;

        private string idField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Union")]
        public ROIUnion Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class ROIUnion
    {

        private Shape[] itemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Ellipse", typeof(ROIUnionShapeGroupEllipse))]
        [System.Xml.Serialization.XmlElementAttribute("Label", typeof(ROIUnionShapeGroupLabel))]
        [System.Xml.Serialization.XmlElementAttribute("Line", typeof(ROIUnionShapeGroupLine))]
        [System.Xml.Serialization.XmlElementAttribute("Mask", typeof(ROIUnionShapeGroupMask))]
        [System.Xml.Serialization.XmlElementAttribute("Point", typeof(ROIUnionShapeGroupPoint))]
        [System.Xml.Serialization.XmlElementAttribute("Polygon", typeof(ROIUnionShapeGroupPolygon))]
        [System.Xml.Serialization.XmlElementAttribute("Polyline", typeof(ROIUnionShapeGroupPolyline))]
        [System.Xml.Serialization.XmlElementAttribute("Rectangle", typeof(ROIUnionShapeGroupRectangle))]
        public Shape[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Ellipse", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupEllipse : Shape
    {

        private float xField;

        private float yField;

        private float radiusXField;

        private float radiusYField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float RadiusX
        {
            get
            {
                return this.radiusXField;
            }
            set
            {
                this.radiusXField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float RadiusY
        {
            get
            {
                return this.radiusYField;
            }
            set
            {
                this.radiusYField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Label", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupLabel : Shape
    {

        private float xField;

        private float yField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Line", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupLine : Shape
    {

        private float x1Field;

        private float y1Field;

        private float x2Field;

        private float y2Field;

        private Marker markerStartField;

        private bool markerStartFieldSpecified;

        private Marker markerEndField;

        private bool markerEndFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X1
        {
            get
            {
                return this.x1Field;
            }
            set
            {
                this.x1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y1
        {
            get
            {
                return this.y1Field;
            }
            set
            {
                this.y1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X2
        {
            get
            {
                return this.x2Field;
            }
            set
            {
                this.x2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y2
        {
            get
            {
                return this.y2Field;
            }
            set
            {
                this.y2Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Marker MarkerStart
        {
            get
            {
                return this.markerStartField;
            }
            set
            {
                this.markerStartField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerStartSpecified
        {
            get
            {
                return this.markerStartFieldSpecified;
            }
            set
            {
                this.markerStartFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Marker MarkerEnd
        {
            get
            {
                return this.markerEndField;
            }
            set
            {
                this.markerEndField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerEndSpecified
        {
            get
            {
                return this.markerEndFieldSpecified;
            }
            set
            {
                this.markerEndFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum Marker
    {

        /// <remarks/>
        Arrow,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Mask", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupMask : Shape
    {

        private BinData binDataField;

        private float xField;

        private float yField;

        private float widthField;

        private float heightField;

        /// <remarks/>
        public BinData BinData
        {
            get
            {
                return this.binDataField;
            }
            set
            {
                this.binDataField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Point", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupPoint : Shape
    {

        private float xField;

        private float yField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Polygon", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupPolygon : Shape
    {

        private string pointsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Points
        {
            get
            {
                return this.pointsField;
            }
            set
            {
                this.pointsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Polyline", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupPolyline : Shape
    {

        private string pointsField;

        private Marker markerStartField;

        private bool markerStartFieldSpecified;

        private Marker markerEndField;

        private bool markerEndFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Points
        {
            get
            {
                return this.pointsField;
            }
            set
            {
                this.pointsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Marker MarkerStart
        {
            get
            {
                return this.markerStartField;
            }
            set
            {
                this.markerStartField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerStartSpecified
        {
            get
            {
                return this.markerStartFieldSpecified;
            }
            set
            {
                this.markerStartFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public Marker MarkerEnd
        {
            get
            {
                return this.markerEndField;
            }
            set
            {
                this.markerEndField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkerEndSpecified
        {
            get
            {
                return this.markerEndFieldSpecified;
            }
            set
            {
                this.markerEndFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute("Rectangle", Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ROIUnionShapeGroupRectangle : Shape
    {

        private float xField;

        private float yField;

        private float widthField;

        private float heightField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float X
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Screen
    {

        private string descriptionField;

        private Reagent[] reagentField;

        private ScreenPlateRef[] plateRefField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string nameField;

        private string protocolIdentifierField;

        private string protocolDescriptionField;

        private string reagentSetDescriptionField;

        private string reagentSetIdentifierField;

        private string typeField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reagent")]
        public Reagent[] Reagent
        {
            get
            {
                return this.reagentField;
            }
            set
            {
                this.reagentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PlateRef")]
        public ScreenPlateRef[] PlateRef
        {
            get
            {
                return this.plateRefField;
            }
            set
            {
                this.plateRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProtocolIdentifier
        {
            get
            {
                return this.protocolIdentifierField;
            }
            set
            {
                this.protocolIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProtocolDescription
        {
            get
            {
                return this.protocolDescriptionField;
            }
            set
            {
                this.protocolDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReagentSetDescription
        {
            get
            {
                return this.reagentSetDescriptionField;
            }
            set
            {
                this.reagentSetDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReagentSetIdentifier
        {
            get
            {
                return this.reagentSetIdentifierField;
            }
            set
            {
                this.reagentSetIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class Reagent
    {

        private string descriptionField;

        private AnnotationRef[] annotationRefField;

        private string idField;

        private string nameField;

        private string reagentIdentifierField;

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnnotationRef")]
        public AnnotationRef[] AnnotationRef
        {
            get
            {
                return this.annotationRefField;
            }
            set
            {
                this.annotationRefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReagentIdentifier
        {
            get
            {
                return this.reagentIdentifierField;
            }
            set
            {
                this.reagentIdentifierField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class ScreenPlateRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class StructuredAnnotations
    {

        private Annotation[] itemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BooleanAnnotation", typeof(BooleanAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("CommentAnnotation", typeof(CommentAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("DoubleAnnotation", typeof(DoubleAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("FileAnnotation", typeof(FileAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("ListAnnotation", typeof(ListAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("LongAnnotation", typeof(LongAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("MapAnnotation", typeof(MapAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("TagAnnotation", typeof(TagAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("TermAnnotation", typeof(TermAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("TimestampAnnotation", typeof(TimestampAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("XMLAnnotation", typeof(XMLAnnotation))]
        public Annotation[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class BooleanAnnotation : BasicAnnotation
    {

        private bool valueField;

        /// <remarks/>
        public bool Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class CommentAnnotation : TextAnnotation
    {

        private string valueField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class DoubleAnnotation : NumericAnnotation
    {

        private double valueField;

        /// <remarks/>
        public double Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class FileAnnotation : TypeAnnotation
    {

        private BinaryFile binaryFileField;

        /// <remarks/>
        public BinaryFile BinaryFile
        {
            get
            {
                return this.binaryFileField;
            }
            set
            {
                this.binaryFileField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class BinaryFile
    {

        private object itemField;

        private string fileNameField;

        private long sizeField;

        private string mIMETypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BinData", typeof(BinData))]
        [System.Xml.Serialization.XmlElementAttribute("External", typeof(External))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MIMEType
        {
            get
            {
                return this.mIMETypeField;
            }
            set
            {
                this.mIMETypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class External
    {

        private string hrefField;

        private byte[] sHA1Field;

        private ExternalCompression compressionField;

        public External()
        {
            this.compressionField = ExternalCompression.none;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "anyURI")]
        public string href
        {
            get
            {
                return this.hrefField;
            }
            set
            {
                this.hrefField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "hexBinary")]
        public byte[] SHA1
        {
            get
            {
                return this.sHA1Field;
            }
            set
            {
                this.sHA1Field = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(ExternalCompression.none)]
        public ExternalCompression Compression
        {
            get
            {
                return this.compressionField;
            }
            set
            {
                this.compressionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public enum ExternalCompression
    {

        /// <remarks/>
        zlib,

        /// <remarks/>
        bzip2,

        /// <remarks/>
        none,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ListAnnotation : Annotation
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class LongAnnotation : NumericAnnotation
    {

        private long valueField;

        /// <remarks/>
        public long Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class MapAnnotation : Annotation
    {

        private MapM[] valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("M", IsNullable = false)]
        public MapM[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class TagAnnotation : TextAnnotation
    {

        private string valueField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class TermAnnotation : BasicAnnotation
    {

        private string valueField;

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class TimestampAnnotation : BasicAnnotation
    {

        private System.DateTime valueField;

        /// <remarks/>
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class XMLAnnotation : TextAnnotation
    {

        private XMLAnnotationValue valueField;

        /// <remarks/>
        public XMLAnnotationValue Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    public partial class XMLAnnotationValue
    {

        private System.Xml.XmlElement[] anyField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ChannelRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06", IsNullable = false)]
    public partial class ProjectRef : Reference
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
}